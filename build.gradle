buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        jcenter()
        maven {
            name "Sponge"
            url "https://repo.spongepowered.org/repository/maven-public/"
            content { includeGroup "org.spongepowered" }
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'com.github.johnrengelman.shadow' version "5.2.0"
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "fantasy_soup.refmap.json"
}

group = 'com.github.zomb_676'
version = '1.0'
archivesBaseName = 'fantasySoup'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                fantasySoup {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                fantasySoup {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'fantasySoup', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fantasySoup {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.4'
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
    runtime "org.jetbrains.kotlin:kotlin-stdlib"
    runtime group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.4.3'
    runtimeOnly group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "1.4.32"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "fantasySoup",
                "Specification-Vendor"    : "zomb_676",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${getArchiveVersion().get()}",
                "Implementation-Vendor"   : "zomb_676",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLAT'                   : 'accesstransformer.cfg',
                "MixinConnector"          : "com.github.zomb_676.fantasySoup.mixin.MixinConnector"
        ])
    }
}
reobf {
    shadowJar {}
}
shadowJar {
    archiveClassifier.set('')
    dependencies{
       include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
       include(dependency("org.jetbrains.kotlinx:kotlinx-coroutines-core"))
    }
}

jar.finalizedBy('reobfJar')